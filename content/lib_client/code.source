code:mapjs:begin
<pre>
$
|-- Oda
    |-- version
    |-- Session
    |-- SessionDefault
    |-- Context
    |    |-- modeInterface
    |    |-- ModeExecution
    |    |    |---init
    |    |    |---scene
    |    |    |---notification
    |    |    |---message
    |    |    |---rooter
    |    |    |---app
    |    |    +---footer
    |    |-- debug
    |    |-- vendorName
    |    |-- rootPath|
    |    |-- projectLabel
    |    |-- mainDiv
    |    |-- host
    |    |-- rest
    |    |-- resources
    |    |-- window
    |    |-- console
    |    +-- startDate
    |-- Regexs
    |    |-- mail
    |    |-- login
    |    |-- pass
    |    |-- firstName
    |    |-- lastName
    |    +-- noInjection
    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.init");'>init()</a>
    |-- Controller
    |--App
    |-- Cache
    |    |-- cache
    |    |-- config
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Cache.clean");'>clean()</a>
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Cache.cleanAll");'>cleanAll()</a>
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Cache.load");'>load({key,attrs,demande})</a>
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Cache.loadWithOutTtl");'>loadWithOutTtl({key,attrs})</a>
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Cache.remove");'>remove({key,attrs})</a>
    |    +-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Cache.save");'>save({key,attrs,datas})</a>
    |-- Loader
    |    |-- Status
    |    |-- iterator
    |    |-- buffer
    |    |-- eltAlreadyLoad
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Loader.load");'>load(params)</a>
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Loader.loading");'>loading(params)</a>
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Loader.loadingGrp");'>loadingGrp(params)</a>
    |    +-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Loader.loadingElt");'>loadingElt(params)</a>
    |-- Mobile
    |    |-- funcReturnGPSPosition
    |    |-- funcReturnCaptureImg
    |    |-- networkState
    |    |-- positionGps
    |    |    |- coords
    |    |    |    |- latitude
    |    |    |    |- longitude
    |    |    |    |- altitude
    |    |    |    |- accuracy
    |    |    |    |- altitudeAccuracy
    |    |    |    |- heading
    |    |    |    +- speed
    |    |    |- timestamp
    |    |    +- statut
    |    |-- pictureSource
    |    |-- destinationType
    |    |-- onMobile
    |    |-- onMobileTest
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Mobile.onSuccessGPSPosition");'>onSuccessGPSPosition(position)</a>
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Mobile.onErrorGPSPosition");'>onErrorGPSPosition(error)</a>
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Mobile.onPhotoSuccess");'>onPhotoSuccess(imageData)</a>
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Mobile.onPhotoURISuccess");'>onPhotoURISuccess(imageURI)</a>
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Mobile.onPhotoFail");'>onPhotoFail(message)</a>
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Mobile.initModuleMobile");'>initModuleMobile()</a>
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Mobile.getConnectionString");'>getConnectionString(networkState)</a>
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Mobile.testConnection");'>testConnection()</a>
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Mobile.getGpsPosition");'>getGpsPosition(onReturn)</a>
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Mobile.getGpsPositionString");'>getGpsPositionString(position)</a>
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Mobile.getPhotoFromCamera");'>getPhotoFromCamera(retourCapture)</a>
    |    +-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Mobile.getPhotoFromLibrary");'>getPhotoFromLibrary(retourCapture)</a>
    |-- MokUp
    |    |-- mokup
    |    +-- <a href='#' onclick='getUrlForFunction("@name $.Oda.MokUp.get");'>get(params)</a>
    |-- Event
    |     |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Event.addListener");'>addListener({name, callback})</a>
    |     +-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Event.send");'>send({name, data})</a>
    |-- Date
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Date.convertSecondsToTime");'>convertSecondsToTime(second)</a>
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Date.getStrDateFR");'>getStrDateFR()</a>
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Date.getStrDateTimeFrFromUs");'>getStrDateTimeFrFromUs(dateUs)</a>
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Date.getStrDateTime");'>getStrDateTime()</a>
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Date.getStrDateTimeFrFromUs");'>getStrDateTimeFrFromUs(dateTimeUs)</a>
    |    +-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Date.dateFormat");'>dateFormat(date, format)</a>
    |-- Interface
    |    |-- Methode
    |    |    |- <a href='#' onclick='getUrlForFunction("@name $.Oda.Interface.Methode.ajax");'>ajax(params)</a> 
    |    |    |- <a href='#' onclick='getUrlForFunction("@name $.Oda.Interface.Methode.mokup");'>mokup(params)</a> 
    |    |    |- <a href='#' onclick='getUrlForFunction("@name $.Oda.Interface.Methode.cache");'>cache(params)</a> 
    |    |    +- <a href='#' onclick='getUrlForFunction("@name $.Oda.Interface.Methode.offline");'>offline(params)</a> 
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Interface.call");'>call(params)</a> 
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Interface.callRest");'>callRest(url, tabSetting, tabInput)</a> 
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Interface.getParameter");'>getParameter(params)</a> 
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Interface.getRangs");'>getRangs(params)</a> 
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Interface.addStat");'>addStat(params)</a> 
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Interface.sendMail");'>sendMail(params)</a> 
    |    +-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Interface.traceLog");'>traceLog(params)</a> 
    |-- Display
    |    |-- Polyfill
    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Polyfill.createHtmlElement");'>createHtmlElement(params)</a>
    |    |    +-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Polyfill.extendHtmlElement");'>extendHtmlElement(params)</a>
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.jsonToStringSingleQuote");'>jsonToStringSingleQuote(json)</a>
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.loading");'>loading(div)</a>
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.render");'>render({id,html})</a>
    |    |-- Menu
    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Menu.remove");'>remove()</a>
    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Menu.show");'>show()</a>
    |    |    +-- display
    |    |-- MenuSlide
    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Menu.remove");'>remove()</a>
    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Menu.show");'>show()</a>
    |    |    +-- display
    |    |-- Message
    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Message.hide");'>hide({id})</a>
    |    |    +-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Message.hide");'>show()</a>
    |    |-- Notification
    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Notification.success");'>success(message)</a>
    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Notification.successI8n");'>successI8n(message)</a>
    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Notification.info");'>info(message)</a>
    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Notification.sucinfoI8ncess");'>infoI8n(message)</a>
    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Notification.warning");'>warning(message)</a>
    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Notification.warningI8n");'>warningI8n(message)</a>
    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Notification.danger");'>danger(message)</a>
    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Notification.dangerI8n");'>dangerI8n(message)</a>
    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Notification.error");'>error(message)</a>
    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Notification.errorI8n");'>errorI8n(message)</a>
    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Notification.load");'>load()</a>
    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Notification.create");'>create(message, type, time)</a>
    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Notification.remove");'>remove({id})</a>
    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Notification.removeAll");'>removeAll()</a>
    |    |    +-- id
    |    |-- Popup
    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Popup.close");'>close({name})</a>
    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Popup.closeAll");'>closeAll()</a>
    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Popup.open");'>open({name, size, label, details, footer, callback, callbackParams})</a>
    |    |    +-- iterator
    |    |-- Scene
    |    |    |-- Avatar
    |    |    |    |-- loaded
    |    |    |    |-- $elt
    |    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Scene.Avatar.getElt");'>getElt()</a>
    |    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Scene.Avatar.load");'>load()</a>
    |    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Scene.Avatar.unLoad");'>unLoad()</a>
    |    |    |    +-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Scene.Avatar.avatar");'>avatar({codeUser, callback})</a>
    |    |    +-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Scene.load");'>load()</a>
    |    |-- Table
    |    |    +-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Table.createDataTable");'>createDataTable({target, data, attribute, option})</a>
    |    |-- Push
    |    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Push.create");'>create(params)</a>
    |    |    +-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.Push.createI8n");'>createI8n(params)</a>
    |    +-- TemplateHtml
    |         |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.TemplateHtml.create");'>create({name, scope})</a>
    |         +-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Display.TemplateHtml.eval");'>eval({exrp, scope})</a>
    |-- Tooling
    |    |-- timerDebounce
    |    |-- timerThrottle
    |    |-- lastThrottle
    |    |-- checkParams(params, def)
    |    |-- urlDownloadFromServerResources(params)
    |    |-- timeout(func, time, arg)
    |    |-- arrondir(value, precision)
    |    |-- clone(params)
    |    |-- deepEqual(elt1, elt2)
    |    |-- debounce(callback, delay)
    |    |-- decodeHtml(html)
    |    |-- findBetweenWords(params)
    |    |-- replaceAll(params)
    |    |-- clearSlashes(params)
    |    |-- getLangBrowser(params)
    |    |-- getListValeurPourAttribut(params)
    |    |-- <a href='#' onclick='getUrlForFunction("@name $.Oda.Tooling.getTypeOfVar");'>getTypeOfVar(var)</a>
    |    |-- isInArray(params)
    |    |-- isUndefined(params)
    |    |-- getMilise(params)
    |    |-- getParameterGet(params)
    |    |-- getParamsLibrary(params)
    |    |-- objectSize(params)
    |    |-- objDataTableFromJsonArray(params)
    |    |-- order(params)
    |    |-- orderInter(params)
    |    |-- pad2(params)
    |    |-- postResources(params)
    |    |-- throttle(params)
    |    |-- detectBrower(params)
    |    |-- isOdaConpatible(params)
    |    |-- merge(params)
    |    +-- filter(params)
    |-- I8n
    |    |-- datas
    |    |-- get(group, tag, options)
    |    |-- getByString(tag)
    |    +-- getByGroupName(groupName)
    |-- Security
    |    |-- auth(params)
    |    |-- loadRight()
    |    +-- logout()
    +-- Worker
    |    |-- lib()
    |    |-- message(cmd, parameter)
    |    |-- initWorker(nameWorker, dataInit, functionCore, fonctionRetour)
    |    +-- terminateWorker(worker)
    |-- Tuto
    |    |-- enable
    |    |-- currentElt
    |    |-- listElt
    |    |-- start()
    |    |-- readed()
    |    +-- show()
    |-- Scope
    |    |-- transform(params)
    |    |-- init(params)
    |    |-- checkInputText(params)
    |    |-- checkInputSelect(params)
    |    +-- Gardian
    |         |-- inventory
    |         |-- add(params)
    |         |-- remove(params)
    |         |-- removeAll(params)
    |         +-- findByElt(params)
    |-- Storage
    |    |-- version
    |    |-- ttl_default
    |    |-- storageKey
    |    |-- isStorageAvaible()
    |    |-- set(key, value, ttl)
    |    |-- get(key, default)
    |    |-- setTtl(key, ttl)
    |    |-- getTtl(key)
    |    |-- remove(key)
    |    |-- reset()
    |    +-- getIndex(filtre)
    |-- Router
    |    |-- current
    |    |-- routes
    |    |-- routerExit
    |    |-- routesAllowed
    |    |-- routeDependencies
    |    |-- routesAllowedDefault
    |    |-- MiddleWares
    |    |-- navigateTo(request)
    |    |-- addRoute(name, routeDef)
    |    |-- addMiddleWare(name, middleWareDef)
    |    |-- addDependencies(name, dependenciesLoad)
    |    |-- loadPartial(params)
    |    |-- startRooter()
    |    +-- routerGo(params)
    |-- Google
    |    |-- sessionState({callback})
    |    +-- startSessionAuth(functionOk, functionKo)
    |-- Log
         |-- info(msg)
         |-- trace(msg)
         |-- debug(msg)
         |-- error(msg)
         +-- warning(msg)
</pre>
code:mapjs:end