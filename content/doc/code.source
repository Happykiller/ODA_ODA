code:modeExecution:begin
  * Lib
```
<script src="<pathDependencies>/Oda/dist/Oda.min.js"></script>
```
  * App
```
<script src="<pathDependencies>/Oda/dist/Oda.min.js?modeExecution=app"></script>
```
  * Lib
```
<script src="<pathDependencies>/Oda/dist/Oda.min.js?modeExecution=full"></script>
```
code:modeExecution:end


code:importDebug:begin
```
<script src="<pathDependencies>/Oda/dist/Oda.js"></script>
```
code:importDebug:end


code:modeDebug:begin
```
<script src="<pathDependencies>/Oda/dist/Oda.js?debug=true"></script>
```
code:modeDebug:end


code:tabRangsDroit:begin
```
| id_rang       | id_menu       |
| ------------- | ------------- |
| 5             | ;1;2;3;       |
```
code:tabRangsDroit:end


code:getI8n:begin
```
var tagValue = $.Oda.I8n.get('oda-project','userLabel');
```
code:getI8n:end


code:buidInterface:begin
```
//Build the interface
$params = new OdaPrepareInterface();
$params->modePublic = false;
$INTERFACE = new OdaLibInterface($params);
```
code:buidInterface:end


code:tabInterfaceRight:begin
```
| interface     | methode       | id_rang       | open          |
| ------------- | ------------- | ------------- | ------------- |
| exemple       | GET           | 3             | 0             |
```
code:tabInterfaceRight:end


code:inheritRightRoute:begin
```
$slim->get('/example/', function () use ($slim) {
    $params = new OdaPrepareInterface($slim);
    $params->inheritRightRoute = 'admin';
    $INTERFACE = new ExampleInterface($params);
    $INTERFACE->get();
});
```
code:inheritRightRoute:end


code:callExample:begin
```
var tabInput = { "data1": "valeur1" };
$.Oda.Interface.callRest("domaine/api/interface", {functionRetour: function(response) {
    $.Oda.Log.trace(response);
}}, tabInput);
```
code:callExample:end


code:setModeInterface:begin
```
$.Oda.Context.modeInterface = ["cache","ajax","mokup","offline"]
```
code:setModeInterface:end


code:cacheSetExample:begin
```
{
  "key" : "api/interface",
  "ttl" : 60,
  "onDemande" : true
}
```
code:cacheSetExample:end


code:mockupSetExample:begin
```
{
  "interface" : "api/interface",
  "value" : [
    {
      "args" : {"param1" : "value1"},
      "return" : {"attr1":1}
    },
    {
      "args" : "default",
      "return" : {"attr1":1}
    }
  ]
}
```
code:mockupSetExample:end


code:buildInerface:begin
```
//Build the interface
$params = new OdaPrepareInterface();
$params->arrayInput = array("code_user","type");
$params->arrayInputOpt = array("option" => null);
$ODA_INTERFACE = new OdaInterface($params);
```
code:buildInerface:end


code:getInput:begin
```
$codeUser = $ODA_INTERFACE->inputs["code_user"];
```
code:getInput:end


code:reqInterface:begin
```
$params = new OdaPrepareReqSql();
$params->sql = "
SELECT a.`id`
FROM `table` a
WHERE 1=1
AND a.`code_user` = :code_user
;";
$params->bindsValue = [
    "code_user" => $INTERFACE->inputs["code_user"]
];
$params->typeSQL = OdaLibBd::SQL_GET_ALL;
$response = $HOW_INTERFACE->BD_ENGINE->reqODASQL($params);
```
code:reqInterface:end


code:implModal:begin
```
$.Oda.Display.Popup.open({
    "name" : "pExemple",
    "size" : "lg",
    "label" : $.Oda.I8n.get('group','attr'),
    "details" : "test",
    "footer" : '<button type="button" oda-label="oda-main.bt-submit" oda-submit="submit" onclick="$.Oda.App.Controller.method();" class="btn btn-primary disabled" disabled>Submit</button >',
    "callback" : function(){
        $.Oda.Scope.Gardian.add({
            id : "gEditPatient",
            listElt : ["input"],
            function : function(e){
                if( ($("#firstName").data("isOk")) ){
                    $("#submit").btEnable();
                }else{
                    $("#submit").btDisable();
                }
            }
        });
    }
});
```
code:implModal:end


code:htmlTemplate:begin
```
<script id="tlpExemple" type="text/template">
    <div>
        {{variable}}
    </div>
</script>
```
code:htmlTemplate:end


code:jsTemplate:begin
```
$.Oda.Display.TemplateHtml.create({
    template: "tlpExemple",
    scope: {
        "variable": "Coucou"
    },
    callback: function(strHtml){
        console.log(strHtml)
    }
});
```
code:jsTemplate:end


code:widgetButton:begin
```
<oda-btn oda-btn-name="submit" oda-btn-style="primary" oda-btn-enter="1" oda-btn-icon-before="ok" oda-btn-icon-after="info" oda-btn-click="$.Oda.Controller.Auth.goIn();" disabled>oda-main.bt-submit</oda-btn>
```
code:widgetButton:end


code:widgetButtonEnaDisa:begin
```
$('#submit').btEnable();
$('#submit').btDisable();
```
code:widgetButtonEnaDisa:end


code:widgetCheckbox:begin
```
<oda-input-checkbox 
    oda-input-checkbox-name="check" 
    oda-input-checkbox-label="oda-main.login" 
    oda-input-checkbox-tips="oda-main.login-tips" 
    oda-input-checkbox-value="true" 
    required/>
```
code:widgetCheckbox:end


code:widgetText:begin
```
<oda-input-text
    oda-input-text-name="login"
    oda-input-text-type="text"
    oda-input-text-label="oda-main.login"
    oda-input-text-tips="oda-main.io-login-tips"
    oda-input-text-advice="oda-main.io-login-advice"
    oda-input-text-placeholder="oda-main.io-login-placeholder"
    oda-input-text-check="Oda.Regexs:login" 
    oda-input-text-paste="false" 
    oda-input-text-debounce="200"
    oda-input-text-value="me"
    disabled
    required/>
```
code:widgetText:end


code:widgetTextArea:begin
```
<oda-input-area
    oda-input-area-name="input_message"
    oda-input-area-label="oda-admin.messageCreateMessage"
    oda-input-area-tips="oda-main.messageCreateMessage-tips"
    oda-input-area-placeholder="oda-main.messageCreateMessage-placeholder"
    oda-input-area-hight="10"
    oda-input-area-paste="false"
    oda-input-area-check=".{25,}"
    oda-input-area-rich="true"
    required/>
```
code:widgetTextArea:end


code:widgetSelect:begin
```
<oda-input-select 
    oda-input-select-name="rank" 
    oda-input-select-label="admin.rank"
    oda-input-select-value="2"
    oda-input-select-availables="[{id:1,label:'one'},{id:2,label:'two'}]"
    oda-input-select-display="elt.id + ':' + elt.label"
    oda-input-select-response="elt.id"
    oda-input-select-order="asc"
    required/>
```
code:widgetSelect:end


code:widgetLoading:begin
```
<oda-loading/>
```
code:widgetLoading:end


code:widgetLabel:begin
```
<oda-label oda-label-value="oda-main.authentication"/>
```
code:widgetLabel:end


code:widgetLabelComplexe:begin
```
<oda-label oda-label-value="test" oda-label-group="oda-main" oda-label-lang="jp" oda-label-default-lang="es" oda-label-variables="{'var1':'var1','var2':'var2'}"/>
```
code:widgetLabelComplexe:end


code:gardian:begin
```
$.Oda.Scope.Gardian.add({
    id : "createPatient",
    listElt : ["firstName", "lastName"],
    function : function(e){
        if( ($("#firstName").data("isOk")) && ($("#lastName").data("isOk")) ){
            $("#submit").btEnable();
        }else{
            $("#submit").btDisable();
        }
    }
});
```
code:gardian:end


code:htmlNewWebConponant:begin
```
<oda-card card-id="1" card-quality="Rare">Abomination</oda-card>
```
code:htmlNewWebConponant:end


code:jsNewWebConponant:begin
```
$.Oda.Display.Polyfill.createHtmlElement({
    name: "oda-card",
    createdCallback: function(){
        var elt = $(this);
        var id = elt.attr("card-id");
        var qualite = elt.attr("card-quality");
    }
});
```
code:jsNewWebConponant:end


code:htmlEditWebConponant:begin
```
<a href="coucou" is="oda-link" oda-link-value="nonici">Hello</a>
```
code:htmlEditWebConponant:end


code:jsEditWebConponant:begin
```
$.Oda.Display.Polyfill.extendHtmlElement({
    name: "oda-link",
    type: "a",
    createdCallback: function(){
        var elt = $(this);
        var link = elt.attr("oda-link-value");
        console.log("link: "+ link);
    }
});
```
code:jsEditWebConponant:end


code:table:begin
```
$.Oda.Display.Table.createDataTable({
    target: "test",
    data: [{
        id: 1
    }],
    attribute: [
        {
            header: "Id",
            size: "50px",
            align: "center",
            value: function(data, type, full, meta, row){
                return row.id;
            }
        }
    ]
});
```
code:table:end


code:tableData:begin
```
[
    {
        "attr": value
    }
]
```
code:tableData:end


code:websocketCon:begin
```
var conn = $.Oda.Websocket.connect({
    host:"localhost",
    port:4242,
    instance:"test"
});
```
code:websocketCon:end


code:websocketEvtCon:begin
```
conn.onConnect = function(e) { 
    Console.log('Connection success.');
};
```
code:websocketEvtCon:end


code:websocketEvtOpen:begin
```
conn.onOpen = function(e) { 
    Console.log('New connection.');
};
```
code:websocketEvtOpen:end


code:websocketEvtDeco:begin
```
conn.onClose = function(e) { 
    Console.log('Close connection.');
};
```
code:websocketEvtDeco:end


code:websocketEvtReceive:begin
```
conn.onMessage = function(e) { 
    Console.log('New message');
};
```
code:websocketEvtReceive:end


code:websocketSent:begin
```
conn.sent({
    attr: "hello"
});
```
code:websocketSent:end